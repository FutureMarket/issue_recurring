<%= form_for @recurrence, :remote => true,
  :url => issue_recurrences_path(@issue),
  :html => {:id => 'new-recurrence-form', :style => 'display: none;'},
  :as => :recurrence do |f| %>

  <%= error_messages_for 'recurrence' %>

  <p>
    <% options, disabled = creation_mode_options %>
    <%= f.select :creation_mode, options, disabled: disabled %>
    <%= f.select :include_subtasks,
      [[t('.including_subtasks'), true], [t('.excluding_subtasks'), false]] %>
    <%= t '.every' %>
    <%= f.number_field :multiplier, min: 1, step: 1, value: 1 %>
    <%= f.select :mode, mode_options %>
    <%= t '.relative_to' %>
    <% options, disabled = anchor_mode_options %>
    <%= f.select :anchor_mode, options, disabled: disabled %>
    <%= t '.delayed_by' %>
    <%= f.number_field :delay_multiplier, min: 0, step: 1, value: 0 %>
    <%= f.select :delay_mode, delay_mode_options %>
    <%= "#{sanitize(t('.until'), tags:{})}:" %>
  </p>
  <p>
    <%= label_tag do %>
      <%= radio_button_tag 'limit_mode', 'never', true %>
      <%= t '.forever' %>
    <% end %>
  </p>
  <p>
    <%= label_tag do %>
      <%= radio_button_tag 'limit_mode', 'user_date', false %>
      <%= t '.user_date' %>
      <%= f.date_field :date_limit, disabled: true, min: Date.current,
        value: Date.current.next_month %>
    <% end %>
  </p>
  <p>
    <%= label_tag do %>
      <%= radio_button_tag 'limit_mode', 'user_count', false %>
      <%= f.number_field :count_limit, disabled: true, min: 1, step: 1, value: 1 %>
      <%= t '.recurrences' %>
    <% end %>
  </p>

  <p>
    <%= submit_tag l(:button_add) %>
    <%= link_to_function l(:button_cancel), '$("#new-recurrence-form").hide();' %>
  </p>
<% end %>

<%= javascript_tag do %>
  function limitModeChange() {
    $('#recurrence_date_limit').prop(
      'disabled',
      !$('#limit_mode_user_date').prop('checked')
    );
    $('#recurrence_count_limit').prop(
      'disabled',
      !$('#limit_mode_user_count').prop('checked')
    );
  }
  $('#new-recurrence-form').on('click', 'label [name="limit_mode"]', limitModeChange);

  function creationModeChange() {
    $('#recurrence_anchor_mode option[value*="_fixed"]').prop(
      'disabled',
      $('#recurrence_creation_mode option[value="in_place"]').prop('selected')
    )
    $('#recurrence_anchor_mode option:selected:disabled').prop('selected', false);
  }
  $('#new-recurrence-form').on('click', '#recurrence_creation_mode', creationModeChange);

  function anchorModeChange() {
    $('#recurrence_creation_mode option[value="in_place"]').prop(
      'disabled',
      $('#recurrence_anchor_mode option:selected').val().includes('_fixed')
    );
    $('#recurrence_creation_mode option:selected:disabled').prop('selected', false);
    $('#recurrence_delay_mode').prop(
      'disabled',
      $('#recurrence_anchor_mode option:selected').val().includes('_flexible')
    );
    $('#recurrence_delay_multiplier').prop(
      'disabled',
      $('#recurrence_anchor_mode option:selected').val().includes('_flexible')
    );
  }
  $('#new-recurrence-form').on('click', '#recurrence_anchor_mode', anchorModeChange);

  $(document).ready(function() {
     limitModeChange();
     creationModeChange();
     anchorModeChange();
  });
<% end %>
